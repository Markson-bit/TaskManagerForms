<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RkL4GxZUAF0zEv8yAAAAAElFTkSuQmCC
</value>
  </data>
</root>